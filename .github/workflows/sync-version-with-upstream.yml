name: ðŸ”„ Sync version with upstream

on:
  # Runs at 10:00 UTC every day
  schedule:
    - cron:  '0 10 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  sync-version:
    name: "Update snapcraft.yaml"
    environment: "Candidate Branch"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.SNAPCRAFTERS_BOT_COMMIT }}
      - name: Fetch release version
        run: |
          VERSION=$(
            curl -sL https://api.github.com/repos/signalapp/Signal-Desktop/releases | 
            jq .  | grep tag_name | grep -v beta | head -n 1 | cut -d'"' -f4 | tr -d 'v'
          )
          sed -i 's/^\(version: \).*$/\1'"$VERSION"'/' snap/snapcraft.yaml

          # Fetch the upstream package.json for the fetched version
          wget -qO package.json https://raw.githubusercontent.com/signalapp/Signal-Desktop/v${VERSION}/package.json

          # Update the @signalapp/ringrtc version if required
          export RINGRTC_VERSION="$(cat package.json | jq -r '.dependencies."@signalapp/ringrtc"')"
          sed -i -E "s|ringrtc-[0-9]+\.[0-9]+\.[0-9]+\.tgz|ringrtc-${RINGRTC_VERSION}.tgz|" snap/snapcraft.yaml

          # Update the @signalapp/bettersqlite version if required
          BETTERSQLITE_VERSION="$(cat package.json | jq -r '.dependencies."@signalapp/better-sqlite3"')"
          sed -i -E "s|better-sqlite3-[0-9]+\.[0-9]+\.[0-9]+\.tgz|better-sqlite3-${BETTERSQLITE_VERSION}.tgz|" snap/snapcraft.yaml
      - name: Check for modified files
        id: git-check
        run: |
          MODIFIED=$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")
          echo "modified=$MODIFIED" >> $GITHUB_OUTPUT
      - name: Commit latest release version
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name 'Snapcrafters Bot'
          git config --global user.email 'merlijn.sebrechts+snapcrafters-bot@gmail.com'
          git commit -am "Automatic sync to latest release"
          git push
    outputs:
      modified: ${{ steps.git-check.outputs.modified }}
