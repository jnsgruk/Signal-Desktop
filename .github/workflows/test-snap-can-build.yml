name: ðŸ§ª Test snap can be built

on:
  pull_request:
    branches: [ "**" ]

# Permissions for GITHUB_TOKEN
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup snapcraft
        env:
          LP_BUILD_SECRET: ${{ secrets.LP_BUILD_SECRET }}
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAP_STORE_CANDIDATE }}
        run: |
          sudo snap install snapcraft --classic
          
          # Setup Launchpad credentials
          mkdir -p ~/.local/share/snapcraft/provider/launchpad
          echo "$LP_BUILD_SECRET" > ~/.local/share/snapcraft/provider/launchpad/credentials
          git config --global user.email "github-actions@github.com"
          git config --global user.name "Github Actions"

      - name: Remote build the snap
        id: build
        run : |
          snapcraft remote-build --launchpad-accept-public-upload
          
          version="$(cat snap/snapcraft.yaml | yq -r '.version')"
          echo "{amd64_snap}={signal_desktop_$version_amd64.snap}" >> "$GITHUB_OUTPUT"
          echo "{arm64_snap}={signal_desktop_$version_arm64.snap}" >> "$GITHUB_OUTPUT"

      - name: Review the built amd64 snap
        uses: diddlesnaps/snapcraft-review-action@v1
        with:
          snap: ${{ steps.build.outputs.amd64_snap }}
          isClassic: 'false'
          # Plugs and Slots declarations to override default denial (requires store assertion to publish)
          # plugs: ./plug-declaration.json
          # slots: ./slot-declaration.json

      - name: Review the built arm64 snap
        uses: diddlesnaps/snapcraft-review-action@v1
        with:
          snap: ${{ steps.build.outputs.arm64_snap }}
          isClassic: 'false'
          # Plugs and Slots declarations to override default denial (requires store assertion to publish)
          # plugs: ./plug-declaration.json
          # slots: ./slot-declaration.json
